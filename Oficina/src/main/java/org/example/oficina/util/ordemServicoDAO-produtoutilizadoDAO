import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class ProdutoUtilizadoDAO {

    private final Connection conn;

    public ProdutoUtilizadoDAO(Connection conn) {
        this.conn = conn;
    }

    public void salvar(ProdutoUtilizado produto) throws SQLException {
        String sql = "INSERT INTO produto_utilizado (descricao, categoria, custo_unitario, preco_venda, quantidade, id_ordem_servico) " +
                "VALUES (?, ?, ?, ?, ?, ?)";

        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, produto.getDescricao());
            stmt.setString(2, produto.getCategoria().name()); // enum como String
            stmt.setBigDecimal(3, produto.getCustoUnitario());
            stmt.setBigDecimal(4, produto.getPrecoVenda());
            stmt.setInt(5, produto.getQuantidade());
            stmt.setInt(6, produto.getOrdemServico().getId());

            stmt.executeUpdate();
        }
    }
}

//


import java.sql.*;
import java.util.List;

public class OrdemServicoDAO {

    private final Connection conn;

    public OrdemServicoDAO(Connection conn) {
        this.conn = conn;
    }

    public void salvar(OrdemServico os) throws SQLException {
        String sql = "INSERT INTO ordem_servico (id_cliente, id_veiculo, entrada, entrega, status, observacoes) VALUES (?, ?, ?, ?, ?, ?)";

        try (PreparedStatement stmt = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS)) {
            stmt.setInt(1, os.getCliente().getId());
            stmt.setInt(2, os.getVeiculo().getId());
            stmt.setDate(3, Date.valueOf(os.getEntrada()));
            stmt.setDate(4, Date.valueOf(os.getEntrega()));
            stmt.setString(5, os.getStatus());
            stmt.setString(6, os.getObservacoes());

            stmt.executeUpdate();

            // Recupera o ID gerado da OS
            try (ResultSet rs = stmt.getGeneratedKeys()) {
                if (rs.next()) {
                    os.setId(rs.getInt(1)); // define o ID na instância
                }
            }
        }

        // Agora salva os produtos vinculados
        ProdutoUtilizadoDAO produtoDAO = new ProdutoUtilizadoDAO(conn);
        for (ProdutoUtilizado produto : os.getProdutosUtilizados()) {
            produto.setOrdemServico(os); // garante vínculo reverso
            produtoDAO.salvar(produto);
        }
    }
}

